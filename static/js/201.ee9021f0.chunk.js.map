{"version":3,"file":"static/js/201.ee9021f0.chunk.js","mappings":"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","sources":["app/GithubProjectForks.tsx","app/GithubProjectIssues.tsx","components/ui/badge.tsx","app/GithubProjectRow.tsx","app/GithubProjectStars.tsx","../node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/Avatar.tsx","components/ui/avatar.tsx"],"sourcesContent":["import React from \"react\"\n\nexport default function GithubProjectForks({ count = 0 }) {\n  return <div className=\"px-3\">{count} forks</div>\n}\n","import React from \"react\"\n\nexport default function GithubProjectIssues({ count = 0 }) {\n  return <div className=\"px-3\">{count} issues</div>\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import React from \"react\"\n\nimport { TableRow, TableCell } from \"@/components/ui/table\"\nimport { Avatar, AvatarImage } from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\n\nimport GithubProjectStars from \"@/app/GithubProjectStars\"\nimport GithubProjectForks from \"@/app/GithubProjectForks\"\nimport GithubProjectIssues from \"@/app/GithubProjectIssues\"\nimport OpenInNewTab from \"@/app/OpenInNewTab\"\n\nexport default function GithubProjectRow({\n  data,\n}: {\n  data: GithubProjectRowData\n}) {\n  return (\n    <TableRow>\n      <TableCell>\n        <Avatar>\n          <AvatarImage src={data.image} alt={data.name} />\n        </Avatar>\n      </TableCell>\n      <TableCell>\n        <div className=\"text-2xl overflow-x-hidden whitespace-nowrap\">\n          <a\n            href={data.homepage ?? data.html_url}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {data.name!.length > 20\n              ? data.name!.slice(0, 20) + \"...\"\n              : data.name}\n          </a>\n        </div>\n      </TableCell>\n      <TableCell className=\"hidden sm:table-cell\">\n        <Badge>{data.language}</Badge>\n      </TableCell>\n      <TableCell className=\"hidden md:table-cell\">\n        <ScrollArea className=\"max-w-[400px] h-[40px] flex items-center\">\n          <p>{data.description}</p>\n        </ScrollArea>\n      </TableCell>\n      <TableCell className=\"hidden lg:table-cell\">\n        <GithubProjectStars count={data.stargazers_count} />\n      </TableCell>\n      <TableCell className=\"hidden lg:table-cell\">\n        <GithubProjectForks count={data.forks} />\n      </TableCell>\n      <TableCell className=\"hidden lg:table-cell\">\n        <GithubProjectIssues count={data.open_issues} />\n      </TableCell>\n      <TableCell className=\"hidden xl:table-cell\">\n        <OpenInNewTab href={data.html_url} />\n      </TableCell>\n    </TableRow>\n  )\n}\n","import React from \"react\"\n\nexport default function Stars({ count = 0 }) {\n  return <div className=\"px-3\">‚≠ê {count}</div>\n}\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = Radix.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n","import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":["GithubProjectForks","_ref","count","_jsxs","className","children","GithubProjectIssues","badgeVariants","cva","variants","variant","default","secondary","destructive","outline","defaultVariants","Badge","props","_jsx","cn","GithubProjectRow","_data$homepage","data","TableRow","TableCell","Avatar","AvatarImage","src","image","alt","name","href","homepage","html_url","target","rel","length","slice","language","ScrollArea","description","GithubProjectStars","stargazers_count","forks","open_issues","OpenInNewTab","Stars","$cddcb0b647441e34$var$AVATAR_NAME","$cddcb0b647441e34$var$createAvatarContext","$cddcb0b647441e34$export$90370d16b488820f","$8NyvN$createContextScope","$cddcb0b647441e34$var$AvatarProvider","$cddcb0b647441e34$var$useAvatarContext","$cddcb0b647441e34$export$e2255cf6045e8d47","$8NyvN$forwardRef","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","$8NyvN$useState","$8NyvN$createElement","scope","onImageLoadingStatusChange","$8NyvN$Primitive","span","$8NyvN$babelruntimehelpersesmextends","ref","$cddcb0b647441e34$var$IMAGE_NAME","$cddcb0b647441e34$export$2cd8ae1985206fe8","onLoadingStatusChange","imageProps","context","loadingStatus","setLoadingStatus","$8NyvN$useLayoutEffect","isMounted","window","Image","updateStatus","status","onload","onerror","$cddcb0b647441e34$var$useImageLoadingStatus","handleLoadingStatusChange","$8NyvN$useCallbackRef","img","$cddcb0b647441e34$var$FALLBACK_NAME","$cddcb0b647441e34$export$69fffb6a9571fbfe","delayMs","fallbackProps","canRender","setCanRender","undefined","$8NyvN$useEffect","timerId","setTimeout","clearTimeout","$cddcb0b647441e34$export$be92b6f5f03c0fe9","$cddcb0b647441e34$export$3e431a229df88919","$cddcb0b647441e34$export$fb8d7f40caaeea67","React","AvatarPrimitive","displayName","_ref2","_ref3"],"sourceRoot":""}