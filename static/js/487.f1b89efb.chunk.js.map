{"version":3,"file":"static/js/487.f1b89efb.chunk.js","mappings":"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","sources":["app/GithubProjectAccordion.tsx","app/GithubProjectForks.tsx","app/GithubProjectIssues.tsx","app/GithubProjectStars.tsx","../node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/Avatar.tsx","components/ui/avatar.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  AccordionItem,\n  AccordionContent,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\nimport { Avatar, AvatarImage } from \"@/components/ui/avatar\"\n\nimport GithubProjectStars from \"@/app/GithubProjectStars\"\nimport GithubProjectForks from \"@/app/GithubProjectForks\"\nimport GithubProjectIssues from \"@/app/GithubProjectIssues\"\n\nexport default function GithubProjectAccordion({\n  data,\n}: {\n  data: GithubProjectRowData\n}) {\n  return (\n    <AccordionItem value={data.name!}>\n      <AccordionTrigger>\n        <div className=\"flex items-center gap-3\">\n          <Avatar>\n            <AvatarImage src={data.image} alt={data.name} />\n          </Avatar>\n          <div className=\"text-2xl overflow-x-hidden whitespace-nowrap\">\n            {data.name}\n          </div>\n        </div>\n      </AccordionTrigger>\n      <AccordionContent>\n        <p className=\"p-2\">{data.description}</p>\n        <div className=\"flex\">\n          <GithubProjectStars count={data.stargazers_count} />\n          <GithubProjectForks count={data.forks} />\n          <GithubProjectIssues count={data.open_issues} />\n        </div>\n      </AccordionContent>\n    </AccordionItem>\n  )\n}\n","import React from \"react\"\n\nexport default function GithubProjectForks({ count = 0 }) {\n  return <div className=\"px-3\">{count} forks</div>\n}\n","import React from \"react\"\n\nexport default function GithubProjectIssues({ count = 0 }) {\n  return <div className=\"px-3\">{count} issues</div>\n}\n","import React from \"react\"\n\nexport default function Stars({ count = 0 }) {\n  return <div className=\"px-3\">‚≠ê {count}</div>\n}\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = Radix.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n","import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":["GithubProjectAccordion","_ref","data","_jsxs","AccordionItem","value","name","children","_jsx","AccordionTrigger","className","Avatar","AvatarImage","src","image","alt","AccordionContent","description","GithubProjectStars","count","stargazers_count","GithubProjectForks","forks","GithubProjectIssues","open_issues","Stars","$cddcb0b647441e34$var$AVATAR_NAME","$cddcb0b647441e34$var$createAvatarContext","$cddcb0b647441e34$export$90370d16b488820f","$8NyvN$createContextScope","$cddcb0b647441e34$var$AvatarProvider","$cddcb0b647441e34$var$useAvatarContext","$cddcb0b647441e34$export$e2255cf6045e8d47","$8NyvN$forwardRef","props","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","$8NyvN$useState","$8NyvN$createElement","scope","onImageLoadingStatusChange","$8NyvN$Primitive","span","$8NyvN$babelruntimehelpersesmextends","ref","$cddcb0b647441e34$var$IMAGE_NAME","$cddcb0b647441e34$export$2cd8ae1985206fe8","onLoadingStatusChange","imageProps","context","loadingStatus","setLoadingStatus","$8NyvN$useLayoutEffect","isMounted","window","Image","updateStatus","status","onload","onerror","$cddcb0b647441e34$var$useImageLoadingStatus","handleLoadingStatusChange","$8NyvN$useCallbackRef","img","$cddcb0b647441e34$var$FALLBACK_NAME","$cddcb0b647441e34$export$69fffb6a9571fbfe","delayMs","fallbackProps","canRender","setCanRender","undefined","$8NyvN$useEffect","timerId","setTimeout","clearTimeout","$cddcb0b647441e34$export$be92b6f5f03c0fe9","$cddcb0b647441e34$export$3e431a229df88919","$cddcb0b647441e34$export$fb8d7f40caaeea67","React","AvatarPrimitive","cn","displayName","_ref2","_ref3"],"sourceRoot":""}